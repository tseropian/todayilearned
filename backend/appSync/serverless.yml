service: til-appsync

plugins:
   - serverless-appsync-plugin
   - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs10.x

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
      Resource: "arn:aws:dynamodb:#{AWS::Region}:*:table/${self:custom.LINKS_TABLE}"

custom:      
  LINKS_TABLE: todayilearn-appsync

  appSync:
    name:  til-appsync
    authenticationType: API_KEY
    schema: schema.gql
    mappingTemplates:
      - dataSource: Links
        type: Mutation
        field: saveLink
        request: saveLink-request-mapping-template.vtl
        response: saveLink-response-mapping-template.vtl
      - dataSource: lambdaDatasource
        type: Query
        field: getLinksByDate
        request: getLinksByDate-request-mapping-template.vtl
        response: getLinksByDate-response-mapping-template.vtl
    dataSources:
      - type: AMAZON_DYNAMODB
        name: Links
        description: 'Table containing the metadata of the links'
        config:
          tableName: { Ref: LinkTable } 
          iamRoleStatements:
            - Effect: "Allow"
              Action:
                - "dynamodb:GetItem"
                - "dynamodb:PutItem"
              Resource:
                - "arn:aws:dynamodb:#{AWS::Region}:*:table/${self:custom.LINKS_TABLE}"
                - "arn:aws:dynamodb:#{AWS::Region}:*:table/${self:custom.LINKS_TABLE}/*"
      - type: AWS_LAMBDA
        name: lambdaDatasource
        description: 'Lambda DataSource'
        config:
          functionName: graphql
          iamRoleStatements: 
            - Effect: "Allow"
              Action:
                - "lambda:invokeFunction"
              Resource:
                - "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-dev-graphql"
                - "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-dev-graphql:*"

functions:
  graphql:
    handler: handler.graphql
    cors: true

resources:
  Resources:
    LinkTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.LINKS_TABLE} 